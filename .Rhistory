V2 <- c(2,4,5)
V2 + V1
V1 + V2
V3 <- V1 + V2
V3 <- V2 + V1
V3 <- V2 + V1
V1 <- c(10,20,34,45,10)
V2 <- c(2,4,5)
V3 <- V2 + V1
V3 <- V2 / V1
V3 <- V2 * V1
V3 <- V2 * V1
V3 <- V1 * V2
V1 <- c(10,20,34,45,10,3)
V3 <- V1 * V2
V2 <- c(2,4,5)
V3 <- V1 + V2
x <- rnorm(5)
for(i in x) {
print[i]
}
x <- rnorm(5)
for(i in x) {
print(i)
}
print(x[1])
print(x[2])
for(j in 1:5){
print(x[j])
}
#conventional programming loop
for(j in 1:5){
print(x[j])
}
j
print(i)
# R specific loop
for(i in x) {
print(i)
}
#conventional programming loop
for(j in 1:5){
print(x[j])
}
#conventional programming loop
for(j in 1:5){
print(x[j])
}
a <- rnorm(N)
b <- rnorm(N)
N <- 100
a <- rnorm(N)
b <- rnorm(N)
#De-vectorized Approach
d <- rep(NA) # Allocate Memory
#De-vectorized Approach
d <- rep(NA,N) # Allocate Memory
#Vectorized Approach
c <- a * b
d <- rep(NA,N) # Allocate Memory
for(i in 1:N) {
d[i] <- a[i] * b[i]
}
a <- rnorm(N)
b <- rnorm(N)
#Vectorized Approach
c <- a * b
#De-vectorized Approach
d <- rep(NA,N) # Allocate Memory
for(i in 1:N) {
d[i] <- a[i] * b[i]
}
seq()
sqrt()
paste()
?rnorm()
?c()
rnorm(5, 10, 8)
?seq()
seq(from = 10, to = 20, length.out = 100)
x <- c("a", "b", "c")
seq(from = 10, to = 20, along.with = x)
?req()
?req()
?rep()
rep(5:6, 10)
rep(5:6, times = 10)
rep(5:6, each = 10)
rep(x, each = 5)
rep(x, times = 5)
A <- seq(from = 10, to = 20, along.with = x)
sqrt(A)
B <- sqrt(A)
?sqrt
library(dbplyr, lib.loc = "/Library/Frameworks/R.framework/Versions/3.6/Resources/library")
detach("package:dbplyr", unload = TRUE)
revenue <- c(14574.49, 7606.46, 8611.41, 9175.41, 8058.65, 8105.44, 11496.28, 9766.09, 10305.32, 14379.96, 10713.97, 15433.50)
expenses <- c(12051.82, 5695.07, 12319.20, 12089.72, 8658.57, 840.20, 3285.73, 5821.12, 6976.93, 16618.61, 10054.37, 3803.96)
profits <- revenue - expenses
profitsAT <- profits * .3
profitsAT <- profits * .7
profits
profitsAT <- (revenue * .7) - expenses
profitsAT
mean(profitsAT)
for(i in 12) {
if(profitsAT(i) > mean_profits) {
good_months <- c(i)
}
else if (profitsAT <= mean_profits) {
bad_months <- c(i)
}
}
profitsAT <- (revenue * .7) - expenses
mean_profits <- mean(profitsAT)
for(i in 12) {
if(profitsAT(i) > mean_profits) {
good_months <- c(i)
}
else if (profitsAT <= mean_profits) {
bad_months <- c(i)
}
}
for(i in 12) {
if(profitsAT[i] > mean_profits) {
good_months <- c(i)
}
else if (profitsAT[i] <= mean_profits) {
bad_months <- c(i)
}
}
mean_profits <- mean(profitsAT)
for(i in 1:12) {
if(profitsAT[i] > mean_profits) {
good_months <- c(i)
}
else if (profitsAT[i] <= mean_profits) {
bad_months <- c(i)
}
}
for(i in 1:12) {
if(profitsAT[i] > mean_profits) {
good_months <- i
}
else if (profitsAT[i] <= mean_profits) {
bad_months <- i
}
}
?max()
max(profitsAt)
max(profitsAT)
profitsAT
Position(max(profitsAT))
position(max(profitsAT))
?Position()
position(max, profitsAT)
Position(max, profitsAT)
max(profitsAT)
min(profitsAt)
min(profitsAT)
tax <- profits * .3
profits.after.tax <- profits - tax
revenue <- c(14574.49, 7606.46, 8611.41, 9175.41, 8058.65, 8105.44, 11496.28, 9766.09, 10305.32, 14379.96, 10713.97, 15433.50)
expenses <- c(12051.82, 5695.07, 12319.20, 12089.72, 8658.57, 840.20, 3285.73, 5821.12, 6976.93, 16618.61, 10054.37, 3803.96)
profits <- revenue - expenses
tax <- profits * .3
profits.after.tax <- profits - tax
tax <- round(profits * .3, 2)
profits <- round(revenue - expenses,2)
profits <- revenue - expenses
profits
tax <- round(profits * .3, 2)
tax
profits.after.tax
fin <- read.csv("P3-Future-500-The-Dataset.csv")
setwd("/Users/llytel/Desktop/R/Advanced R")
fin <- read.csv("P3-Future-500-The-Dataset.csv")
head(fin)
head(fin, 24)
str(fin)
fin$Revenue <- gsub("\\$","",fin$Revenue) #escape sequence for special character $
head(fin)
fin$Revenue <- gsub(",","",fin$Revenue)
str(fin)
#Do the same thing for growth
fin$Growth <- gsub("\\%","",fin$Growth)
head(fin)
str(fin)
fin$Revenue <- as.numeric(fin$Revenue)
fin$Expenses <- as.numeric(fin$Expenses)
fin$Growth <- as.numeric(fin$Growth)
str(fin)
str(fin)
complete.cases(fin)
head(fin, 24)
fin[!complete.cases(fin),]
fin[!complete.cases(fin),]
!complete.cases(fin)
fin[!complete.cases(fin),]
fin[!complete.cases(fin),]
fin <- read.csv("P3-Future-500-The-Dataset.csv", na.strings = c(""))
head(fin, 24)
#factors refesher
fin$ID <- factor(fin$ID)
fin$Inception  <- factor(fin$Inception)
str(fin)
summary(fin)
#factor variable trap!
#Converting into Numerics from Characters
a <- c("12", "13", "14", "12", "12")
typeof(a)
b <- as.numeric(a)
typeof(b)
#Converting into Nuermics For Factors
z <- factor(c("12", "13", "14", "12", "12"))
z
typeof(z)
y <- as.numeric(z)
typeof(y)
y
#----------
summary(z)
z
#correct way
x <- as.numeric(as.character(z))
x
typeof(x)
#FVT Example
head(fin)
str(fin)
summary(fin)
## fin$Profit <- factor(fin$Profit)
fin$Profit <- as.numeric(fin$Profit)
str(fin)
head(fin)
#sub() and gsub()
?gsub()
fin$Expenses <- gsub(" Dollars","",fin$Expenses)
fin$Expenses <- gsub(",","",fin$Expenses)
head(fin)
str(fin)
fin$Revenue <- gsub("\\$","",fin$Revenue) #escape sequence for special character $
head(fin)
fin$Revenue <- gsub(",","",fin$Revenue)
str(fin)
#Do the same thing for growth
fin$Growth <- gsub("\\%","",fin$Growth)
head(fin)
str(fin)
fin$Revenue <- as.numeric(fin$Revenue)
fin$Expenses <- as.numeric(fin$Expenses)
fin$Growth <- as.numeric(fin$Growth)
fin[!complete.cases(fin),]
str(fin)
fin$Revenue = 9746272
fin$Revenue == 9746272
fin[fin$Revenue == 9746272,]
#Locate Missing Data
#Updated Import: As new NA's
fin <- read.csv("P3-Future-500-The-Dataset.csv", na.strings = c(""))
str(fin)
head(fin)
summary(fin)
head(fin, 24)
#factors refesher
fin$ID <- factor(fin$ID)
fin$Inception  <- factor(fin$Inception)
str(fin)
summary(fin)
#factor variable trap!
#Converting into Numerics from Characters
a <- c("12", "13", "14", "12", "12")
typeof(a)
b <- as.numeric(a)
typeof(b)
#Converting into Nuermics For Factors
z <- factor(c("12", "13", "14", "12", "12"))
z
typeof(z)
y <- as.numeric(z)
typeof(y)
y
#----------
summary(z)
z
#correct way
x <- as.numeric(as.character(z))
x
typeof(x)
#FVT Example
head(fin)
str(fin)
summary(fin)
## fin$Profit <- factor(fin$Profit)
fin$Profit <- as.numeric(fin$Profit)
str(fin)
head(fin)
#sub() and gsub()
?gsub()
fin$Expenses <- gsub(" Dollars","",fin$Expenses)
fin$Expenses <- gsub(",","",fin$Expenses)
head(fin)
str(fin)
fin$Revenue <- gsub("\\$","",fin$Revenue) #escape sequence for special character $
head(fin)
fin$Revenue <- gsub(",","",fin$Revenue)
str(fin)
#Do the same thing for growth
fin$Growth <- gsub("\\%","",fin$Growth)
head(fin)
str(fin)
fin$Revenue <- as.numeric(fin$Revenue)
fin$Expenses <- as.numeric(fin$Expenses)
fin$Growth <- as.numeric(fin$Growth)
fin[!complete.cases(fin),]
fin[fin$Revenue == 9746272,]
which(fin[fin$Revenue == 9746272,])
which(fin$Revenue == 9746272,)
?which
which(fin$Employees == 45)
which(fin$Employees == 45,)
which(fin$Employees == 45,)
fin[which(fin$Employees == 45),]
fin$Expenses == NA
fin[fin$Expenses == NA,]
a <- c(1,23,143, NA, 67, NA)
is.na(a)
is.na(fin$Expenses)
fin[is.na(fin$Expenses)]
fin[is.na(fin$Expenses),]
fin_backup <- fin
fin[complete.cases(fin),]
fin[!complete.cases(fin),]
fin[!complete.cases(fin),]
fin[is.na(fin$Industry),]
fin[!is.na(fin$Industry),]
fin <- fin[!is.na(fin$Industry),]
head(fin, 25)
fin[is.na(fin$Industry),]
fin[is.na(fin),]
fin[!complete.cases(fin),]
head(fin, 25)
rownames(fin)
nrow(fin)
1:nrow(fin)
rownames(fin) <- NULL
head(fin, 25)
fin[!complete.cases(fin)]
fin[!complete.cases(fin),]
fin[is.na(fin$State),]
fin[is.na(fin$State) & fin$City == "New York",]
fin[is.na(fin$State) & fin$City == "New York","State"] <- "NY"
fin[11,377,]
fin[c(11,377),]
fin[!complete.cases(fin),]
fin[is.na(fin$State),]
fin[is.na(fin$State), & fin$City == "San Francisco", "State"] <- "CA"
fin[is.na(fin$State) & fin$City == "San Francisco", "State"] <- "CA"
fin[c(84,265),]
fin[c(82,265),]
fin[!complete.cases(fin$Employees)]
fin[!complete.cases(fin$Employees),]
median(fin["Employees", na.rm = TRUE])
median(fin["Employees"], na.rm = TRUE)
median(fin[,"Employees"], na.rm = TRUE)
median(fin[fin$Industry == "Retail","Employees"], na.rm = TRUE)
mean(fin[fin$Industry == "Retail","Employees"], na.rm = TRUE)
median(fin[fin$Industry == "Retail","Employees"], na.rm = TRUE)
med_emp_retail <- median(fin[fin$Industry == "Retail","Employees"], na.rm = TRUE)
med_emp_retail
fin[is.na(fin$Employees),]
fin[is.na(fin$Employees) and fin$Industry == "Retail",]
fin[is.na(fin$Employees) & fin$Industry == "Retail",]
fin[is.na(fin$Employees) & fin$Industry == "Retail", "Employees"] <- med_emp_retail
fin[3,]
med_emp_services <- median(fin[fin$Industry == "Services", "Employees"], na.rm = TRUE)
med_emp_services
med_emp_services
median(fin[fin$Industry == "Services", "Employees"], na.rm = TRUE)
fin[!complete.cases(fin$Industry)]
fin[!complete.cases(fin$Employees)]
fin[!complete.cases(fin$Employees),]
med_emp_services <- median(fin[fin$Industry == "Services", "Employees"], na.rm = TRUE)
med_emp_services
median(fin[fin$Industry == "Financial Services", "Employees"], na.rm = TRUE)
med_emp_services <- median(fin[fin$Industry == "Financial Services", "Employees"], na.rm = TRUE)
med_emp_services
med_serv <- median(fin[fin$Industry == "Financial Services", "Employees"], na.rm = TRUE)
rm(med_emp_services)
med_serv
fin[is.na(fin$Employees) & fin$Industry == "Financial Services",]
fin[is.na(fin$Employees) & fin$Industry == "Financial Services", "Employees"] <- med_serv
fin[330,]
fin[!complete.cases(fin)]
fin[!complete.cases(fin),]
fin[!complete.cases(fin),]
med_growth_constr <- median(fin[fin$Industry == "Construction", "Growth"], na.rm = TRUE)
med_growth_constr
med_growth_constr <- median(fin[, "Growth"], na.rm = TRUE)
med_growth_constr
med_growth_constr <- median(fin[fin$Industry == "Construction", "Growth"], na.rm = TRUE)
med_growth_constr
fin[is.na(fin$Growth) & fin$Industry == "Construction"]
fin[is.na(fin$Growth) & fin$Industry == "Construction",]
fin[is.na(fin$Growth) & fin$Industry == "Construction", "Growth"] <- med_growth_constr
fin[8,]
fin[!complete.cases(fin)]
fin[!complete.cases(fin),]
med_revenue_constr <- median(fin[fin$Industry == "Construction", "Revenue"], na.rm = T)
med_revenue_constr
med_revenue_constr <- median(fin[, "Revenue"], na.rm = T)
med_revenue_constr
med_revenue_constr <- median(fin[fin$Industry == "Construction", "Revenue"], na.rm = T)
med_revenue_constr
fin[is.na(fin$Revenue) & fin$Industry == "Construction", "Revenue"] <- med_revenue_constr
fin[c(8,42)]
fin[c(8,42),]
fin[!complete.cases(fin),]
med_exp_constr <- median(fin[fin$Industry == "Construction", "Expenses"], na.rm = T)
(med_exp_constr <- median(fin[fin$Industry == "Construction", "Expenses"], na.rm = T))
fin[is.na(fin$Revenue) & fin$Industry == "Construction", "Expenses"] <- med_exp_constr
fin[!complete.cases(fin)]
fin[!complete.cases(fin),]
fin[is.na(fin$Revenue) & fin$Industry == "Construction", "Expenses"] <- med_exp_constr
fin[!complete.cases(fin),]
fin[is.na(fin$Expenses) & fin$Industry == "Construction", "Expenses"] <- med_exp_constr
fin[!complete.cases(fin),]
(med_profit_constr <- median(fin[fin$Industry == "Construction", "Profit"], na.rm = T))
(med_profit_constr <- median(fin[, "Profit"], na.rm = T))
(med_profit_constr <- median(fin[fin$Industry == "Construction", "Profit"], na.rm = T))
fin[is.na(fin$Profit) & fin$Industry == "Construction", "Profit"] <- med_profit_constr
fin[!complete.cases(fin),]
med_exp_finserv <-  median(fin[fin$Industry == "Financial Services", "Expenses"], na.rm = T)
(med_exp_finserv <-  median(fin[fin$Industry == "Financial Services", "Expenses"], na.rm = T))
fin[is.na(fin$Expenses) & fin$Industry == "Financial Services", "Expenses"] <- med_exp_finserv
fin[!complete.cases(fin),]
fin[is.na(fin$Expenses) & fin$Industry == "Financial Services", "Expenses"] <- med_exp_finserv
fin[!complete.cases(fin),]
fin[15,fin$Industry]
fin[fin$Industry, 15]
fin[15,]
fin[15, fin$Industry]
fin[15, "Industry"]
(med_exp_it_serv <-  median(fin[fin$Industry == "IT Services", "Expenses"], na.rm = T))
fin[is.na(fin$Expenses) & fin$Industry == "IT Services", "Expenses"] <- med_exp_it_serv
fin[!complete.cases(fin),]
fin[15, "Expenses"]
(fin[15, "Revenue"] - fin[15,"Profit"])
fin[15, "Expenses"] <- fin[15, "Revenue"] - fin[15,"Profit"]
fin[15, "Industry"]
fin[15, ]
library(ggplot2)
p <- ggplot(data = fin)
p
p + geom_point(aes(x = Revenue, y = Expenses, color = Industry))
p + geom_point(aes(x = Revenue, y = Expenses, color = Industry, size = Profit))
d + geom_point(aes(x = Revenue, y = Expenses,
color = Industry))
d <- ggplot(data = fin)
d + geom_point(aes(x = Revenue, y = Expenses,
color = Industry))
d <-  geom_point(data = fin, aes(x = Revenue, y = Expenses,
color = Industry))
d + geom_point() +
geom_smooth(fill = NA, size = 1.2)
d <-  geom_point(data = fin, aes(x = Revenue, y = Expenses,
color = Industry))
d + geom_point() +
geom_smooth(fill = NA, size = 1.2)
d <-  ggplot(data = fin, aes(x = Revenue, y = Expenses,
color = Industry))
d + geom_point() +
geom_smooth(fill = NA, size = 1.2)
f <-  ggplot(data = fin, aes(x = Industry, y = Growth,
color = Industry))
f + geom_boxplot(size = 1)
f + geom_jitter() +
geom_boxplot(size = 1, alpha = .5, outlier.color = NA)
#sub() and gsub()
?gsub()
?sub()
#sub() and gsub()
?gsub()
?sub()
getwd()
read.csv("P3-Machine-Utilization.csv")
read.csv("P3-Machine-Utilization.csv")
util <- read.csv("P3-Machine-Utilization.csv")
head(util, 12)
str(util)
summary(util)
util$Utilization = 1 - util$Percent.Idle
head(util,12)
summary(util)
?POSIXct
as.POSIXct(util$Timestamp, format = "%d/%m/%Y %H:%M")
util$PosixTime <- as.POSIXct(util$Timestamp, format = "%d/%m/%Y %H:%M")
head(util,12)
summary(util)
util$Timestamp <- NULL
head(util,12)
util <- util[,c(4,1,2,3)]
head(util,12)
summary(util)
RL1 <- util[util$Machine == "RL1",]
summary(RL1)
RL1 <- factor(RL1$Machine)
summary(RL1)
summary(RL1)
RL1 <- util[util$Machine == "RL1",]
RL1$Machine <- factor(RL1$Machine)
summary(RL1)
